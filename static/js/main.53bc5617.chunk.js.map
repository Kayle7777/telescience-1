{"version":3,"sources":["space.png","components/Images.js","components/Locations.js","components/MapSelect.js","components/FavoritesMenu.js","components/HelperPopover.js","components/Overlay.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Images","_ref","selectedMap","image","info","cogmap1","cogmap2","faintSignal","oshan","clarion","destiny","atlas","horizon","mushroom","manta","kondaru","donut2","fleet","mapInfo","react_default","a","createElement","onDragStart","e","preventDefault","arr","i","g","push","concat","map","url","className","key","alt","src","withStyles","theme","main","marginTop","spacing","unit","line","fontSize","typography","caption","list","maxHeight","overflow","arrow","transition","transitions","create","easing","sharp","duration","enteringScreen","arrowShift","transform","headerText","marginLeft","props","classes","math","_useState","useState","_useState2","Object","slicedToArray","collapseIn","collapse","index_es","onClick","align","variant","disabled","icons_index_es","in","component","name","location","loc","_math$modifiers","modifiers","xModifier","yModifier","_math$divisors","divisors","xDivisor","yDivisor","toString","toUpperCase","paper","position","marginRight","textField","margin","width","selectMap","MenuProps","menu","native","value","onChange","val","target","listHeight","overflowY","centerCoords","zoom","favorites","modFavorites","handleCollapse","_useState3","_useState4","permaCollapse","doPermaCollapse","useEffect","length","aria-owns","undefined","aria-haspopup","id","each","index","objectSpread","FormHelperTextProps","style","textAlign","helperText","InputProps","startAdornment","aria-label","endAdornment","favs","defineProperty","filter","items","HelperText","Fragment","color","size","href","rel","HelperPopover","open","anchorEl","onClose","anchorOrigin","popOver","popOverText","HelperPopover_HelperText","zIndex","resultsPos","maxWidth","goto","rightPanel","top","right","helpButton","bottom","marginBottom","selectedTile","doAnchor","mathIn","toggleMath","_useState5","input","actualX","actualY","_useState6","gpsValues","setValue","padding","data-testid","update","parseInt","tf","components_HelperPopover","Boolean","vertical","horizontal","tabIndex","components_Locations","components_MapSelect","components_FavoritesMenu","event","currentTarget","height","prev","newArr","backgroundImage","spaceTile","display","verticalAlign","imageUnclicked","cursor","imageClicked","noClick","userSelect","initial","mouse","pos","samedi","_useState7","_useState8","setZoom","scale","_useState9","_useState10","mousedown","clickDown","_useState11","_useState12","focussed","focus","_useState13","_useState14","doMenu","data","localStorage","getItem","JSON","parse","localKeys","keys","stateKeys","stringify","missingKey","oKey","includes","extraKey","forEach","obj","pop","apply","toConsumableArray","getStorage","setItem","iStyles","divStyle","transformOrigin","selectorStyle","tilePosition","onKeyDown","altKey","acceptableKeys","w","s","d","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","1","2","3","4","6","7","8","9","+","-","keyDown","_len","arguments","args","Array","_key","link","easterEggPos","easterEgg","Math","round","random","components_Overlay","onMouseLeave","onMouseEnter","onContextMenu","contextMenu","clientX","clientY","tileMath","imgCoords","onMouseDown","onMouseUp","onMouseMove","onWheel","mouseWheel","components_Images","fav","stopPropagation","item","stroke","fill","strokeWidth","mouseDown","MenuListProps","disablePadding","anchorPosition","left","anchorReference","closeMenu","x","y","_x","_x2","funcScale","deltaY","newScale","_imgCoords","_imgCoords2","imageX","imageY","centerScale","modifier","newTile","tile","tileX","tileY","centerX","window","screen","centerY","createMuiTheme","palette","type","useNextVariants","App","core_styles","pages_Main","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.53bc5617.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/space.d4bd4642.png\";","import React from 'react';\r\n\r\nconst Images = ({ selectedMap, image }) => {\r\n    const info = mapInfo(selectedMap);\r\n    return (\r\n        <div onDragStart={e => e.preventDefault()}>\r\n            {(() => {\r\n                const arr = [];\r\n                for (let i = 0; i < 8; i++) {\r\n                    for (let g = 0; g < 8; g++) {\r\n                        arr.push(`${i},${g}`);\r\n                    }\r\n                }\r\n                return arr;\r\n            })().map(url => {\r\n                return <img className={image} key={url} alt={url} src={`${info}/${url}.png`} />;\r\n            })}\r\n        </div>\r\n    );\r\n    function mapInfo(selectedMap) {\r\n        const info = {\r\n            cogmap1: `https://goonhub.com/images/maps/cogmap/z1`,\r\n            cogmap2: `https://goonhub.com/images/maps/cogmap2/z1`,\r\n            faintSignal: `https://goonhub.com/images/maps/cogmap2/z3`,\r\n            oshan: `https://goonhub.com/images/maps/oshan/z1`,\r\n            clarion: `https://goonhub.com/images/maps/clarion/z1`,\r\n            destiny: `https://goonhub.com/images/maps/destiny/z1`,\r\n            atlas: `https://goonhub.com/images/maps/atlas/z1`,\r\n            horizon: `https://goonhub.com/images/maps/horizon/z1`,\r\n            mushroom: `https://goonhub.com/images/maps/mushroom/z1`,\r\n            manta: `https://goonhub.com/images/maps/manta/z1`,\r\n            kondaru: `https://goonhub.com/images/maps/kondaru/z1`,\r\n            donut2: `https://goonhub.com/images/maps/donut2/z1`,\r\n            fleet: `https://goonhub.com/images/maps/bellerophon%20fleet/z1`,\r\n        };\r\n        if (!info[selectedMap]) return info['cogmap1'];\r\n        return info[selectedMap];\r\n    }\r\n};\r\n\r\nexport default Images;\r\n","import React, { useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Paper, Typography, Collapse, IconButton } from '@material-ui/core';\r\nimport { KeyboardArrowDown as Arrow } from '@material-ui/icons';\r\n\r\nconst styles = theme => ({\r\n    main: {\r\n        // Height of button that's being translated\r\n        marginTop: -48 + theme.spacing.unit,\r\n    },\r\n    line: {\r\n        fontSize: theme.typography.caption.fontSize,\r\n    },\r\n    list: {\r\n        maxHeight: '297px',\r\n        overflow: 'auto',\r\n    },\r\n    arrow: {\r\n        transition: theme.transitions.create(['transform'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    arrowShift: {\r\n        transform: 'rotate(180deg)',\r\n        transition: theme.transitions.create(['transform'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    headerText: {\r\n        marginLeft: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\nconst Locations = props => {\r\n    const { classes, math } = props;\r\n    const [collapseIn, collapse] = useState(false);\r\n    return (\r\n        <Paper className={classes.main}>\r\n            <Typography\r\n                onClick={() => collapse(!collapseIn)}\r\n                align=\"center\"\r\n                variant=\"overline\"\r\n                className={classes.headerText}\r\n            >\r\n                expedition locations\r\n                <IconButton disabled className={collapseIn ? classes.arrow : classes.arrowShift}>\r\n                    <Arrow />\r\n                </IconButton>\r\n            </Typography>\r\n            <Collapse in={collapseIn}>\r\n                <Typography component=\"div\" variant=\"body2\" className={classes.list}>\r\n                    <ul>\r\n                        {[\r\n                            { name: 'meat station', location: [209, 23] },\r\n                            { name: 'solar observatory', location: [99, 85] },\r\n                            { name: 'lava moon', location: [88, 106] },\r\n                            { name: 'mars', location: [191, 135] },\r\n                            { name: 'ice moon', location: [15, 150] },\r\n                            { name: 'biodome', location: [120, 164] },\r\n                            { name: 'museum of lunar history', location: [131, 212] },\r\n                            { name: 'catmandu', location: [236, 223] },\r\n                        ].map(loc => {\r\n                            const [xModifier, yModifier] = math.modifiers;\r\n                            const [xDivisor, yDivisor] = math.divisors;\r\n                            loc.location[0] = loc.location[0] / xDivisor + xModifier;\r\n                            loc.location[1] = loc.location[1] / yDivisor + yModifier;\r\n                            return (\r\n                                <li key={`${loc.name}_${loc.location.toString()}`}>\r\n                                    <p className={classes.line}>{loc.name.toUpperCase()}</p>\r\n                                    {`X: ${loc.location[0]}, Y: ${loc.location[1]}`}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </Typography>\r\n            </Collapse>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Locations);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { FormControl, Select, Paper } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        position: 'relative',\r\n        marginTop: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        margin: theme.spacing.unit,\r\n        width: `calc(100% - ${theme.spacing.unit * 2}px)`,\r\n    },\r\n});\r\n\r\nconst MapSelect = props => {\r\n    const { classes, selectMap, selectedMap } = props;\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <FormControl className={classes.textField}>\r\n                <Select\r\n                    MenuProps={classes.menu}\r\n                    native\r\n                    value={selectedMap}\r\n                    onChange={e => {\r\n                        let val = e.target.value;\r\n                        return selectMap(val);\r\n                    }}\r\n                >\r\n                    <option value=\"cogmap1\">Cogmap 1</option>\r\n                    <option value=\"cogmap2\">Cogmap 2</option>\r\n                    <option value=\"faintSignal\">Debris Field</option>\r\n                    <option value=\"oshan\">Oshan</option>\r\n                    <option value=\"clarion\">Clarion</option>\r\n                    <option value=\"destiny\">Destiny</option>\r\n                    <option value=\"atlas\">Atlas</option>\r\n                    <option value=\"horizon\">Horizon</option>\r\n                    <option value=\"mushroom\">Mushroom</option>\r\n                    <option value=\"manta\">Manta</option>\r\n                    <option value=\"kondaru\">Kondaru</option>\r\n                    <option value=\"donut2\">Donut 2</option>\r\n                    <option value=\"fleet\">Bellerophon Fleet</option>\r\n                </Select>\r\n            </FormControl>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(MapSelect);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Collapse, List, ListItem, Paper, Typography, IconButton, TextField, InputAdornment } from '@material-ui/core';\r\nimport { KeyboardArrowDown as Arrow, Close, MyLocation } from '@material-ui/icons';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        position: 'relative',\r\n        marginTop: theme.spacing.unit * 2,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    headerText: {\r\n        marginRight: theme.spacing.unit * 6,\r\n    },\r\n    arrow: {\r\n        transition: theme.transitions.create(['transform'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    arrowShift: {\r\n        transform: 'rotate(180deg)',\r\n        transition: theme.transitions.create(['transform'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    listHeight: {\r\n        maxHeight: 538 - 48 * 2 - theme.spacing.unit * 4,\r\n        overflowY: 'auto',\r\n    },\r\n});\r\n\r\nconst FavoritesMenu = props => {\r\n    const { classes, centerCoords, zoom, favorites, modFavorites, math, selectedMap } = props;\r\n    // This is to handle a sort of auto open, auto close thing\r\n    const [collapseIn, handleCollapse] = useState(false);\r\n    const [permaCollapse, doPermaCollapse] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (favorites[selectedMap].length >= 1 && !collapseIn && !permaCollapse) return handleCollapse(true);\r\n        else if (favorites[selectedMap].length < 1) return handleCollapse(false);\r\n    }, [props]);\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Typography\r\n                className={classes.headerText}\r\n                aria-owns={collapseIn ? 'favorites-menu' : undefined}\r\n                aria-haspopup=\"true\"\r\n                variant=\"overline\"\r\n                align=\"center\"\r\n                onClick={() => {\r\n                    if (!favorites[selectedMap].length) return handleCollapse(false);\r\n                    else {\r\n                        doPermaCollapse(true);\r\n                        return handleCollapse(!collapseIn);\r\n                    }\r\n                }}\r\n            >\r\n                <IconButton disabled className={collapseIn ? classes.arrow : classes.arrowShift}>\r\n                    <Arrow />\r\n                </IconButton>\r\n                Favorites\r\n            </Typography>\r\n            <Collapse in={collapseIn}>\r\n                <List id=\"favorites-menu\" className={classes.listHeight}>\r\n                    {favorites[selectedMap].map((each, index) => {\r\n                        return (\r\n                            <ListItem key={`${each.location}_key`}>\r\n                                <TextField\r\n                                    value={each.name}\r\n                                    onChange={e => {\r\n                                        let val = e.target.value;\r\n\r\n                                        return modFavorites(favorites => {\r\n                                            favorites[selectedMap][index].name = val;\r\n                                            return { ...favorites };\r\n                                        });\r\n                                    }}\r\n                                    FormHelperTextProps={{ style: { textAlign: 'center' } }}\r\n                                    helperText={`Real: [${each.location.toString()}] ----- Console: [${each\r\n                                        .location[0] /\r\n                                        math.divisors[0] +\r\n                                        math.modifiers[0]},${each.location[1] / math.divisors[1] + math.modifiers[1]}]`}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <IconButton\r\n                                                    onClick={() => centerCoords(zoom, [0, 0], each.location)}\r\n                                                    aria-label=\"go to\"\r\n                                                >\r\n                                                    <MyLocation />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    onClick={() => {\r\n                                                        if (favorites.length === 1) handleCollapse(false);\r\n                                                        return modFavorites(favs => ({\r\n                                                            ...favs,\r\n                                                            [selectedMap]: favs[selectedMap].filter(\r\n                                                                items => items !== each\r\n                                                            ),\r\n                                                        }));\r\n                                                    }}\r\n                                                    aria-label=\"delete\"\r\n                                                >\r\n                                                    <Close />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                            </ListItem>\r\n                        );\r\n                    })}\r\n                </List>\r\n            </Collapse>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(FavoritesMenu);\r\n","import React from 'react';\r\nimport { Button, Popover, Typography } from '@material-ui/core';\r\n\r\nconst HelperText = () => {\r\n    return (\r\n        <>\r\n            <h3>Help, I'm stuck!</h3>\r\n            <hr />\r\n            <p>\r\n                Send two Space GPS's through the teleporter at the console coord values, and record their actual\r\n                position under GPS coord.\r\n            </p>\r\n            <p>When you're done, you can close the math table by clicking the \"DO TELESCIENCE MATH\" header.</p>\r\n            <p>ALT + WASD, Arrow Keys, or Numpad to navigate via keyboard.</p>\r\n            <p>Right click anywhere to add favorites.</p>\r\n            <p>\r\n                Stuck? Check the SS13 wiki on{`\\t`}\r\n                <Button\r\n                    color=\"secondary\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    href=\"https://wiki.ss13.co/Telescience#Decoding_the_teleporter\"\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                >\r\n                    decoding the teleporter\r\n                </Button>\r\n            </p>\r\n            <p>\r\n                Need more info?{`\\t`}\r\n                <Button\r\n                    color=\"secondary\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    href=\"https://github.com/Kayle7777/telescience\"\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                >\r\n                    Click here\r\n                </Button>\r\n                {`\\t`}for a detailed readme.\r\n            </p>\r\n            <hr />\r\n            <p>Check out the alpha version of my ChemHelper site. Plenty more features are in store!</p>\r\n            <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                href=\"https://kayle7777.github.io/chemhelper/\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n            >\r\n                ChemHelper\r\n            </Button>\r\n        </>\r\n    );\r\n};\r\n\r\nconst HelperPopover = props => {\r\n    const { classes, open, anchorEl, onClose, anchorOrigin } = props;\r\n    return (\r\n        <Popover\r\n            className={classes.popOver}\r\n            aria-label=\"Math help\"\r\n            id=\"math-tips\"\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={anchorOrigin}\r\n        >\r\n            <Typography variant=\"caption\" className={classes.popOverText}>\r\n                <HelperText />\r\n            </Typography>\r\n        </Popover>\r\n    );\r\n};\r\n\r\nexport default HelperPopover;\r\n","import React, { useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    Collapse,\r\n    TextField,\r\n    InputAdornment,\r\n    Typography,\r\n    IconButton,\r\n    Fab,\r\n} from '@material-ui/core';\r\nimport { Help, KeyboardArrowDown as Arrow, VerticalAlignCenter as GoTo } from '@material-ui/icons';\r\nimport Locations from './Locations';\r\nimport MapSelect from './MapSelect';\r\nimport FavoritesMenu from './FavoritesMenu';\r\nimport HelperPopover from './HelperPopover';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n        width: 75,\r\n    },\r\n    main: {\r\n        zIndex: 2,\r\n        position: 'fixed',\r\n        marginLeft: theme.spacing.unit,\r\n        marginTop: theme.spacing.unit,\r\n        width: 257,\r\n    },\r\n    resultsPos: {\r\n        zIndex: 2,\r\n        position: 'relative',\r\n        marginTop: theme.spacing.unit,\r\n    },\r\n    arrow: {\r\n        transition: theme.transitions.create(['transform'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    arrowShift: {\r\n        transform: 'rotate(180deg)',\r\n        transition: theme.transitions.create(['transform'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    headerText: {\r\n        marginLeft: theme.spacing.unit * 2,\r\n    },\r\n    popOver: {\r\n        marginLeft: theme.spacing.unit,\r\n    },\r\n    popOverText: {\r\n        margin: theme.spacing.unit,\r\n        maxWidth: 257 + theme.spacing.unit * 30,\r\n    },\r\n    goto: {\r\n        zIndex: 2,\r\n        transform: 'translate(102px, -127px)',\r\n    },\r\n    rightPanel: {\r\n        position: 'absolute',\r\n        zIndex: 2,\r\n        top: 0,\r\n        right: 0,\r\n        width: 300,\r\n    },\r\n    helpButton: {\r\n        position: 'fixed',\r\n        bottom: 0,\r\n        right: 0,\r\n        marginBottom: theme.spacing.unit * 2,\r\n        marginRight: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\nconst Overlay = props => {\r\n    const { classes, selectedTile, centerCoords, selectMap, selectedMap, zoom, favorites, modFavorites } = props;\r\n    // anchorEl / doAnchor used for HelperPopover popover\r\n    const [anchorEl, doAnchor] = useState(null);\r\n    // mathIn / toggleMath used for math menu collapse\r\n    const [mathIn, toggleMath] = useState(true);\r\n    const [gpsValues, setValue] = useState({ input: [100, 50], actualX: [6, 7], actualY: [49, 51] });\r\n    const xDivisor = gpsValues.actualX[1] - gpsValues.actualX[0],\r\n        yDivisor = gpsValues.actualY[1] - gpsValues.actualY[0],\r\n        xModifier = gpsValues.input[0] - gpsValues.actualX[0] / xDivisor,\r\n        yModifier = gpsValues.input[1] - gpsValues.actualY[0] / yDivisor;\r\n    return (\r\n        <>\r\n            <div className={classes.main}>\r\n                <Paper>\r\n                    <Typography\r\n                        className={classes.headerText}\r\n                        onClick={() => toggleMath(!mathIn)}\r\n                        variant=\"overline\"\r\n                        align=\"center\"\r\n                        id=\"tableTitle\"\r\n                    >\r\n                        Do telescience math\r\n                        <IconButton disabled className={mathIn ? classes.arrow : classes.arrowShift}>\r\n                            <Arrow />\r\n                        </IconButton>\r\n                    </Typography>\r\n                    <Collapse in={mathIn}>\r\n                        <Table padding=\"dense\">\r\n                            <TableHead>\r\n                                {/* HEADER */}\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Console coord</TableCell>\r\n                                    <TableCell align=\"center\">GPS coord</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody data-testid=\"telescience-gps\">\r\n                                {/* CONSOLE X1 // ACTUAL X1 */}\r\n\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            disabled={!mathIn}\r\n                                            onChange={e => update(e, 'input', 0)}\r\n                                            value={gpsValues.input[0]}\r\n                                            InputProps={{\r\n                                                startAdornment: <InputAdornment position=\"start\">X1</InputAdornment>,\r\n                                                'data-testid': 'input-1-0',\r\n                                            }}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            disabled={!mathIn}\r\n                                            onChange={e => update(e, 'actualX', 0)}\r\n                                            value={gpsValues.actualX[0]}\r\n                                            InputProps={{\r\n                                                'data-testid': 'actual-x-0',\r\n                                            }}\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n\r\n                                {/* CONSOLE Y1 // ACTUAL Y1 */}\r\n\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            disabled={!mathIn}\r\n                                            onChange={e => update(e, 'input', 1)}\r\n                                            value={gpsValues.input[1]}\r\n                                            InputProps={{\r\n                                                startAdornment: <InputAdornment position=\"start\">Y1</InputAdornment>,\r\n                                                'data-testid': 'input-1-1',\r\n                                            }}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            disabled={!mathIn}\r\n                                            onChange={e => update(e, 'actualY', 0)}\r\n                                            value={gpsValues.actualY[0]}\r\n                                            InputProps={{\r\n                                                'data-testid': 'actual-y-0',\r\n                                            }}\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n\r\n                                {/* CONSOLE X2 // ACTUAL X2 */}\r\n\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            value={gpsValues.input[0] + 1}\r\n                                            disabled\r\n                                            InputProps={{\r\n                                                startAdornment: <InputAdornment position=\"start\">X2</InputAdornment>,\r\n                                                'data-testid': 'input-2-0',\r\n                                            }}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            disabled={!mathIn}\r\n                                            onChange={e => update(e, 'actualX', 1)}\r\n                                            value={gpsValues.actualX[1]}\r\n                                            InputProps={{\r\n                                                'data-testid': 'actual-x-1',\r\n                                            }}\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n\r\n                                {/* CONSOLE Y2 // ACTUAL Y2 */}\r\n\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            value={gpsValues.input[1] + 1}\r\n                                            disabled\r\n                                            InputProps={{\r\n                                                startAdornment: <InputAdornment position=\"start\">Y2</InputAdornment>,\r\n                                                'data-testid': 'input-2-1',\r\n                                            }}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            disabled={!mathIn}\r\n                                            onChange={e => update(e, 'actualY', 1)}\r\n                                            value={gpsValues.actualY[1]}\r\n                                            InputProps={{\r\n                                                'data-testid': 'actual-y-1',\r\n                                            }}\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Collapse>\r\n                </Paper>\r\n                <Paper className={classes.resultsPos}>\r\n                    <Typography className={classes.headerText} variant=\"overline\" align=\"center\" id=\"tableTitle\">\r\n                        Real Coordinates\r\n                    </Typography>\r\n                    <Table padding=\"dense\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <TextField\r\n                                        className={classes.textField}\r\n                                        value={selectedTile[0]}\r\n                                        onChange={e => {\r\n                                            let val = parseInt(e.target.value);\r\n                                            if (!val) val = 0;\r\n                                            return props.transform(tf => ({\r\n                                                ...tf,\r\n                                                selectedTile: [val, tf.selectedTile[1]],\r\n                                            }));\r\n                                        }}\r\n                                        InputProps={{\r\n                                            startAdornment: <InputAdornment position=\"start\">X</InputAdornment>,\r\n                                            'data-testid': 'selected-x',\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <TextField\r\n                                        className={classes.textField}\r\n                                        value={selectedTile[1]}\r\n                                        onChange={e => {\r\n                                            let val = parseInt(e.target.value);\r\n                                            if (!val) val = 0;\r\n                                            return props.transform(tf => ({\r\n                                                ...tf,\r\n                                                selectedTile: [tf.selectedTile[0], val],\r\n                                            }));\r\n                                        }}\r\n                                        InputProps={{\r\n                                            startAdornment: <InputAdornment position=\"start\">Y</InputAdornment>,\r\n                                            'data-testid': 'selected-y',\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                    <Typography variant=\"overline\" align=\"center\">\r\n                        Console Coordinates\r\n                    </Typography>\r\n                    <Table padding=\"dense\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <TextField\r\n                                        disabled\r\n                                        className={classes.textField}\r\n                                        value={selectedTile[0] / xDivisor + xModifier}\r\n                                        InputProps={{\r\n                                            startAdornment: <InputAdornment position=\"start\">X</InputAdornment>,\r\n                                            'data-testid': 'console-x',\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <TextField\r\n                                        disabled\r\n                                        className={classes.textField}\r\n                                        value={selectedTile[1] / yDivisor + yModifier}\r\n                                        InputProps={{\r\n                                            startAdornment: <InputAdornment position=\"start\">Y</InputAdornment>,\r\n                                            'data-testid': 'console-y',\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n                <HelperPopover\r\n                    classes={classes}\r\n                    open={Boolean(anchorEl)}\r\n                    anchorEl={anchorEl}\r\n                    onClose={() => doAnchor(null)}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                />\r\n                <IconButton tabIndex={-1} className={classes.goto} onClick={() => centerCoords()}>\r\n                    <GoTo />\r\n                </IconButton>\r\n                <Locations math={{ divisors: [xDivisor, yDivisor], modifiers: [xModifier, yModifier] }} />\r\n            </div>\r\n            <div className={classes.rightPanel}>\r\n                <MapSelect selectMap={selectMap} selectedMap={selectedMap} />\r\n                <FavoritesMenu\r\n                    zoom={zoom}\r\n                    centerCoords={centerCoords}\r\n                    favorites={favorites}\r\n                    selectedMap={selectedMap}\r\n                    modFavorites={modFavorites}\r\n                    math={{ divisors: [xDivisor, yDivisor], modifiers: [xModifier, yModifier] }}\r\n                />\r\n                <Fab\r\n                    className={classes.helpButton}\r\n                    onClick={event => {\r\n                        let val = event.currentTarget;\r\n                        doAnchor(val);\r\n                    }}\r\n                >\r\n                    <Help style={{ height: '100%', width: '100%', transform: 'scale(1.21, 1.21)' }} />\r\n                </Fab>\r\n            </div>\r\n        </>\r\n    );\r\n    function update(e, target, index) {\r\n        let val = parseInt(e.target.value);\r\n        if (!val) val = 0;\r\n        return setValue(prev => {\r\n            let newArr = prev[target];\r\n            newArr[index] = val;\r\n            return { ...prev, [target]: newArr };\r\n        });\r\n    }\r\n};\r\n\r\nexport default withStyles(styles)(Overlay);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Menu, Button } from '@material-ui/core';\r\nimport { Info } from '@material-ui/icons';\r\nimport spaceTile from '../space.png';\r\nimport Images from '../components/Images';\r\nimport Overlay from '../components/Overlay';\r\n\r\nconst styles = theme => ({\r\n    main: {\r\n        backgroundImage: `url(${spaceTile})`,\r\n        display: 'block',\r\n        width: 1200 * 8,\r\n        height: 1200 * 8,\r\n        // transition: theme.transitions.create(['transform'], {\r\n        //     duration: 100,\r\n        // }),\r\n    },\r\n    image: {\r\n        verticalAlign: 'middle',\r\n        width: 1200,\r\n        height: 1200,\r\n    },\r\n    imageUnclicked: {\r\n        cursor: 'grab',\r\n    },\r\n    imageClicked: {\r\n        cursor: 'grabbing',\r\n    },\r\n    noClick: {\r\n        userSelect: 'none',\r\n    },\r\n});\r\n\r\nconst Main = props => {\r\n    const { classes } = props;\r\n    // tf.mouse is used to determine if the mouse moved during onClick\r\n    const [tf, transform] = useState({\r\n        initial: [0, 0],\r\n        mouse: [0, 0],\r\n        pos: [-2200, -2000],\r\n        selectedTile: [139, 192],\r\n    });\r\n    const [selectedMap, selectMap] = useState('cogmap1');\r\n    const [favorites, modFavorites] = useState({\r\n        cogmap1: [\r\n            { name: 'Telescience', location: [112, 123] },\r\n            { name: 'AI core', location: [137, 146] },\r\n            { name: \"Captain's Locker\", location: [85, 166] },\r\n        ],\r\n        cogmap2: [\r\n            { name: 'Telescience', location: [104, 120] },\r\n            { name: 'AI core', location: [190, 220] },\r\n        ],\r\n        faintSignal: [\r\n            { name: 'RobustTec Implants', location: [266, 132] },\r\n            { name: 'Phaser', location: [285, 162] },\r\n        ],\r\n        oshan: [\r\n            { name: 'AI Core', location: [196, 160] },\r\n            { name: 'Telescience', location: [181, 174] },\r\n        ],\r\n        clarion: [\r\n            { name: 'AI Core', location: [133, 99] },\r\n            { name: 'Telescience', location: [153, 107] },\r\n        ],\r\n        destiny: [\r\n            { name: 'AI Core', location: [154, 141] },\r\n            { name: 'Telescience', location: [174, 104] },\r\n        ],\r\n        atlas: [\r\n            { name: 'AI Core', location: [144, 180] },\r\n            { name: 'Telescience', location: [140, 164] },\r\n        ],\r\n        samedi: [],\r\n        horizon: [\r\n            { name: 'AI Core', location: [114, 119] },\r\n            { name: 'Telescience', location: [235, 154] },\r\n        ],\r\n        mushroom: [\r\n            { name: 'AI Core', location: [185, 40] },\r\n            { name: 'Telescience', location: [134, 103] },\r\n        ],\r\n        manta: [\r\n            { name: 'AI Core', location: [145, 169] },\r\n            { name: 'Telescience', location: [169, 128] },\r\n        ],\r\n        kondaru: [\r\n            { name: 'AI Core', location: [213, 160] },\r\n            { name: 'Telescience', location: [123, 92] },\r\n        ],\r\n        donut2: [\r\n            { name: 'AI Core', location: [241, 73] },\r\n            { name: 'Telescience', location: [251, 208] },\r\n        ],\r\n        fleet: [\r\n            { name: 'AI Core', location: [128, 98] },\r\n            { name: 'Telescience', location: [114, 69] },\r\n        ],\r\n    });\r\n    const [zoom, setZoom] = useState(7);\r\n    const scale = zoom / 10;\r\n    // mousedown / clickDown used for wheel and mousemove events\r\n    const [mousedown, clickDown] = useState(false);\r\n    // focussed / focus used for keydown events.\r\n    const [focussed, focus] = useState(false);\r\n    // menu / doMenu used for menu events (obviously)\r\n    const [menu, doMenu] = useState({ mouse: [0, 0], target: null });\r\n\r\n    // Check for an existing localStorage item, if it is different than the existing state localStorage item, set it as the state.\r\n    useEffect(() => {\r\n        const data = getStorage();\r\n        if (data) modFavorites(data);\r\n    }, []);\r\n\r\n    // Set a new localStorage item every time a favorite is added or removed\r\n    useEffect(\r\n        () => {\r\n            setStorage(favorites);\r\n        },\r\n        [JSON.stringify(favorites)]\r\n    );\r\n\r\n    const iStyles = {\r\n        divStyle: {\r\n            transformOrigin: `0 0`,\r\n            transform: `translate3D(${tf.pos[0]}px, ${tf.pos[1]}px, 0) scale(${scale})`,\r\n        },\r\n        selectorStyle: {\r\n            zIndex: 1,\r\n            position: 'fixed',\r\n            ...tilePosition(tf.selectedTile),\r\n        },\r\n    };\r\n\r\n    const Svg = props => (\r\n        <svg\r\n            onClick={props.onClick}\r\n            onWheel={props.onWheel ? props.onWheel : mouseWheel}\r\n            onMouseDown={props.mouseDown}\r\n            onMouseEnter={() => focus(true)}\r\n            onContextMenu={props.onContextMenu ? props.onContextMenu : e => e.preventDefault()}\r\n            className={`${classes.noClick} ${classes.imageUnclicked}`}\r\n            width={32 * scale}\r\n            height={32 * scale}\r\n            style={props.style}\r\n        >\r\n            <rect\r\n                width={`${32 * scale}px`}\r\n                height={`${32 * scale}px`}\r\n                stroke={props.color}\r\n                fill=\"transparent\"\r\n                strokeWidth=\"4\"\r\n            />\r\n        </svg>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.noClick} onKeyDown={e => keyDown(e)} tabIndex={0}>\r\n            {selectedMap === 'oshan' &&\r\n                easterEgg(\r\n                    // Ocean man OR sea of love\r\n                    {\r\n                        link:\r\n                            Math.round(Math.random()) === 0\r\n                                ? 'https://www.youtube.com/watch?v=6E5m_XtCX3c'\r\n                                : 'https://youtu.be/3PgwDlbdew8?t=10',\r\n                        pos: [150, 150],\r\n                    },\r\n                    // Tiburón bebé\r\n                    { link: 'https://youtu.be/XqZsoesa55w?t=12', pos: [3, 4], color: '#6D7373' }\r\n                )}\r\n            <Overlay\r\n                selectedTile={tf.selectedTile}\r\n                centerCoords={centerCoords}\r\n                selectMap={selectMap}\r\n                selectedMap={selectedMap}\r\n                zoom={zoom}\r\n                favorites={favorites}\r\n                modFavorites={modFavorites}\r\n                transform={transform}\r\n            />\r\n            <div\r\n                onMouseLeave={() => {\r\n                    clickDown(false);\r\n                    return focus(false);\r\n                }}\r\n                onMouseEnter={() => focus(true)}\r\n                onContextMenu={contextMenu}\r\n                onClick={mouseClick}\r\n                onMouseDown={mouseDown}\r\n                onMouseUp={() => clickDown(false)}\r\n                onMouseMove={mouseMove}\r\n                onWheel={mouseWheel}\r\n            >\r\n                <div className={classes.main} style={iStyles.divStyle}>\r\n                    <Images\r\n                        image={`${classes.image} ${classes.noClick} ${\r\n                            mousedown ? classes.imageClicked : classes.imageUnclicked\r\n                        }`}\r\n                        selectedMap={selectedMap}\r\n                    />\r\n                </div>\r\n                {favorites[selectedMap].length > 0 &&\r\n                    favorites[selectedMap].map(fav => {\r\n                        return (\r\n                            <svg\r\n                                key={`${fav.location.toString()}_SVG`}\r\n                                onContextMenu={e => {\r\n                                    e.stopPropagation();\r\n                                    e.preventDefault();\r\n                                    return modFavorites(prev => ({\r\n                                        ...prev,\r\n                                        [selectedMap]: prev[selectedMap].filter(item => item !== fav),\r\n                                    }));\r\n                                }}\r\n                                style={{\r\n                                    zIndex: 1,\r\n                                    position: 'fixed',\r\n                                    ...tilePosition(fav.location),\r\n                                }}\r\n                                className={`${classes.noClick} ${classes.imageUnclicked}`}\r\n                                width={32 * scale}\r\n                                height={32 * scale}\r\n                            >\r\n                                <rect\r\n                                    width={`${32 * scale}px`}\r\n                                    height={`${32 * scale}px`}\r\n                                    stroke=\"#39FF14\"\r\n                                    fill=\"transparent\"\r\n                                    strokeWidth=\"4\"\r\n                                />\r\n                            </svg>\r\n                        );\r\n                    })}\r\n            </div>\r\n            <Svg\r\n                color=\"white\"\r\n                style={iStyles.selectorStyle}\r\n                onClick={() => transform(tf => ({ ...tf, selectedTile: [1, 1] }))}\r\n                onContextMenu={contextMenu}\r\n            />\r\n            <Menu\r\n                MenuListProps={{ disablePadding: true }}\r\n                open={Boolean(menu.target)}\r\n                anchorEl={menu.target}\r\n                anchorPosition={{ top: menu.mouse[1], left: menu.mouse[0] }}\r\n                anchorReference={'anchorPosition'}\r\n                onContextMenu={e => {\r\n                    e.preventDefault();\r\n                    return closeMenu();\r\n                }}\r\n                onClose={() => closeMenu()}\r\n            >\r\n                <Button size=\"small\" onClick={menuButtonClick}>\r\n                    favorite\r\n                </Button>\r\n            </Menu>\r\n        </div>\r\n    );\r\n\r\n    // This is used to place each tile selector over the image container just as if it had the 300/300 grid the game does.\r\n    function tileMath(x, y) {\r\n        return [1 + (x - (x % 32)) / 32, 300 - (y - (y % 32)) / 32];\r\n    }\r\n\r\n    // This is used to position each tile selector correctly, this is the CSS value applied to its absolute position.\r\n    function tilePosition(x, y) {\r\n        if (!y && typeof x === 'object') [x, y] = x;\r\n        return {\r\n            left: (x - 1) * 32 * scale + tf.pos[0],\r\n            top: -(y - 300) * 32 * scale + tf.pos[1],\r\n        };\r\n    }\r\n\r\n    // This is used to find the absolute pixel value of where a user clicked. The positioning of the image needs to be\r\n    // subtracted from the X and Y value of a users click, and the scale needs to be removed to find this value.\r\n    function imgCoords(x, y, funcScale = scale, pos = tf.pos) {\r\n        return [x - pos[0], y - pos[1]].map(i => i / funcScale);\r\n    }\r\n\r\n    function mouseClick(e) {\r\n        const { clientX, clientY } = e;\r\n        // Detect if we moved\r\n        if (tf.mouse[0] !== clientX || tf.mouse[1] !== clientY) return;\r\n        return transform(tf => ({ ...tf, selectedTile: tileMath(...imgCoords(clientX, clientY)) }));\r\n    }\r\n\r\n    function mouseDown(e) {\r\n        clickDown(true);\r\n        const { clientX, clientY } = e;\r\n        return transform(tf => ({ ...tf, mouse: [clientX, clientY], initial: imgCoords(clientX, clientY, 1) }));\r\n    }\r\n\r\n    function mouseMove(e) {\r\n        if (!mousedown) return;\r\n        const { clientX, clientY } = e;\r\n        return transform(tf => ({ ...tf, pos: imgCoords(clientX, clientY, 1, tf.initial) }));\r\n    }\r\n\r\n    function mouseWheel(e, val = 1) {\r\n        if (mousedown) return;\r\n        let { deltaY, clientX, clientY } = e;\r\n        if (deltaY > 0) {\r\n            if (zoom === 2) return;\r\n            setZoom(zoom - val);\r\n        } else {\r\n            if (zoom === 15) return;\r\n            setZoom(zoom + val);\r\n        }\r\n        const newScale = (deltaY > 0 ? zoom - val : zoom + val) / 10;\r\n        const [imageX, imageY] = imgCoords(clientX, clientY);\r\n        return transform(tf => ({ ...tf, pos: [-imageX * newScale + clientX, -imageY * newScale + clientY] }));\r\n    }\r\n\r\n    function centerCoords(centerScale = 12, modifier = [0, 0], newTile) {\r\n        const tile = newTile ? newTile : tf.selectedTile;\r\n        // Default to 1.2 scale, optional arg to change this\r\n        setZoom(centerScale);\r\n        const newScale = centerScale / 10;\r\n        const [tileX, tileY] = [\r\n            (tile[0] - 1 + modifier[0]) * 32 * newScale,\r\n            -(tile[1] - 303 + modifier[1]) * 32 * newScale,\r\n        ];\r\n        const [centerX, centerY] = [window.screen.width / 2, window.screen.height / 2];\r\n        return transform(tf => ({ ...tf, pos: [-tileX + centerX, -tileY + centerY] }));\r\n    }\r\n\r\n    function keyDown(e) {\r\n        if (!focussed) return;\r\n        let { key, altKey } = e;\r\n        if (!altKey) return;\r\n        if (key === '5' || key === ' ') return centerCoords(zoom);\r\n        let acceptableKeys = {\r\n            w: [0, 1],\r\n            a: [-1, 0],\r\n            s: [0, -1],\r\n            d: [1, 0],\r\n            ArrowUp: [0, 1],\r\n            ArrowLeft: [-1, 0],\r\n            ArrowDown: [0, -1],\r\n            ArrowRight: [1, 0],\r\n            '1': [-1, -1],\r\n            '2': [0, -1],\r\n            '3': [1, -1],\r\n            '4': [-1, 0],\r\n            '6': [1, 0],\r\n            '7': [-1, 1],\r\n            '8': [0, 1],\r\n            '9': [1, 1],\r\n            '+': 2,\r\n            '-': -2,\r\n        };\r\n        if (!Object.keys(acceptableKeys).includes(key)) return;\r\n        else {\r\n            const val = acceptableKeys[key];\r\n            if (key === '+' || key === '-') {\r\n                if (key === '+' && zoom >= 15) return;\r\n                if (key === '-' && zoom <= 3) return;\r\n                setZoom(zoom + val);\r\n                return centerCoords(zoom + val);\r\n            }\r\n            centerCoords(zoom, val);\r\n            return transform(tf => ({\r\n                ...tf,\r\n                selectedTile: [tf.selectedTile[0] + val[0], tf.selectedTile[1] + val[1]],\r\n            }));\r\n        }\r\n    }\r\n\r\n    function contextMenu(e) {\r\n        e.preventDefault();\r\n        const { clientX, clientY, target } = e;\r\n        return doMenu(prev => ({ ...prev, target: target, mouse: [clientX, clientY] }));\r\n    }\r\n\r\n    function menuButtonClick(e) {\r\n        closeMenu();\r\n        return modFavorites(prev => {\r\n            prev[selectedMap].push({\r\n                name: `Favorite #${prev[selectedMap].length + 1}`,\r\n                location: tileMath(...imgCoords(menu.mouse[0], menu.mouse[1])),\r\n            });\r\n            return prev;\r\n        });\r\n    }\r\n\r\n    function closeMenu() {\r\n        return doMenu(prev => ({ ...prev, target: null }));\r\n    }\r\n\r\n    function setStorage(favs) {\r\n        if (typeof favs !== 'string') favs = JSON.stringify(favs);\r\n        localStorage.setItem('telescienceFavorites', favs);\r\n    }\r\n\r\n    function getStorage() {\r\n        let data = localStorage.getItem('telescienceFavorites');\r\n        if (!data) return false;\r\n        data = JSON.parse(data);\r\n        let localKeys = Object.keys(data),\r\n            stateKeys = Object.keys(favorites);\r\n        if (localKeys.length !== stateKeys.length || JSON.stringify(localKeys) !== JSON.stringify(stateKeys)) {\r\n            let missingKey = stateKeys.filter(oKey => !localKeys.includes(oKey));\r\n            let extraKey = localKeys.filter(oKey => !stateKeys.includes(oKey));\r\n            if (missingKey.length) {\r\n                missingKey.forEach(key => {\r\n                    let obj = {};\r\n                    obj[key] = favorites[key];\r\n                    data = { ...data, ...obj };\r\n                });\r\n            }\r\n            if (extraKey.length) {\r\n                extraKey.forEach(key => {\r\n                    let obj = {};\r\n                    localKeys.pop(...extraKey);\r\n                    localKeys.forEach(key => {\r\n                        obj[key] = data[key];\r\n                    });\r\n                    data = obj;\r\n                });\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    function easterEgg(...args) {\r\n        return (\r\n            <>\r\n                {args.map((info, i) => {\r\n                    if (!info.pos) info.pos = [150 + i, 151 + i];\r\n                    info.pos[0]--;\r\n                    info.pos[1] = 300 - info.pos[1];\r\n                    return (\r\n                        <a\r\n                            key={`easteregg#${i + 1}`}\r\n                            style={{ color: 'inherit' }}\r\n                            href={info.link}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                        >\r\n                            <Info style={{ ...easterEggPos(...info.pos), color: info.color }} />\r\n                        </a>\r\n                    );\r\n                })}\r\n            </>\r\n        );\r\n    }\r\n\r\n    function easterEggPos(x, y) {\r\n        return {\r\n            zIndex: 2,\r\n            position: 'absolute',\r\n            left: x * 32 * scale + tf.pos[0],\r\n            top: y * 32 * scale + tf.pos[1],\r\n            width: 32 * scale,\r\n            height: 32 * scale,\r\n        };\r\n    }\r\n};\r\n\r\nexport default withStyles(styles)(Main);\r\n","import React from 'react';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport Main from './pages/Main';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n});\r\n\r\nconst App = props => {\r\n    return (\r\n        <MuiThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <Main />\r\n        </MuiThemeProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}